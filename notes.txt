Maps by user LISCHE from the star citizen forums
https://robertsspaceindustries.com/community/citizen-spotlight/13710-STANTON-Navigational-Maps

Go through each code file and add commentary/running time(not for UniverseBuilder)
https://www.ijeat.org/wp-content/uploads/papers/v4i6/F4173084615.pdf
Talking Points:
Time complexity for kruskal based on page 633 in introduction to algorithms
Idea of time complexity right before time complexity for algorithms (improvements for time complexity could come in the use of deques(double ended lists))
  Plus basics of time complexity as they may get skipped during explanation of algorithms
Python have documentation describing the running time of build-in operations: https://wiki.python.org/moin/TimeComplexity
https://medium.com/opex-analytics/heuristic-algorithms-for-the-traveling-salesman-problem-6a53d8143584
(dont calculate distance from finish node directly to start node as we only need to visit each node once)
calculate speed of algorithm with the speed of the ship quantum jump drive (on a drake caterpillar)
Look for Kruskal in AD book
Unibuilder structure
Reason for running time related to inputs (so it doesn't rely on my programming capabilities)
Pl0 is where the ship always starts(since there is no real difference between Pl0 and other Pl celBodies
Moons are more subproblems for each planet due to how the celbodies are connected to eachother
MST approximation[ ] (D.J.Rosenkrantz, R.E.Stearns and P.M.Lewis. An analysis of several heuristics for the traveling salesman problem. SIAM J. Computing, Vol.6, 1977, pp.563-581)
Downside of Christofides is that it skips to next node which is not neccesarily make the most optimal route
Downside of Simmulated Annealing is without an extensive dataset, figuring out correct iterations for constructing tours is more guesswork than precision
(short mention) UniverseBuilder does not have running time analysis since it is not a part of the project goal, a constant for all algorithms, and in practice would not be used in the final product.
    Same idea applies to RoutemapperProject as it is only used to test the algorithms on the same dataset.

(In post work section)
It has come to my attention that traveling through the wormholes actually have a time cost even though it does not have a fuel cost.
  where in the program, the wormholes function almost like entering through a door to a seperate room; in acutallity it works more like falling through a hole while avoiding branches.


Adjacency list or adjacency matrix:

https://www.youtube.com/watch?v=HDUzBEG1GlA
https://github.com/joeyajames/Python/blob/master/graph_adjacency-matrix.py

Pro : List
Faster and uses less space for sparse graphs
Con : List
Slower for dense graphs 

Pro : Matrix
Faster for dense graphs
Simpler for Weighted graphs
Con : Matrix
uses more space



For simplicity the planets orbit around the Wormhole instead of the star, as there is little difference in the distance to each
Due to the scale of the ingame distances, calculated distance is been calculated in units where 1 unit = 1000km

General look up: Shortest-path-tree


Algorithms:
Nearest Neighbour[x] Approximate and greedy
Clarke Wright[x] Approximate
Christofides[x] Approximate
K-Opt[x](essentially a exact route)
2-Opt[x] Approximate
Simulated annealing[x] Approximate https://www.hindawi.com/journals/cin/2016/1712630/
Depth-first branch and bound

https://www2.seas.gwu.edu/~simhaweb/champalg/tsp/tsp.html

(pick a cite)
Little, John DC, et al. "An algorithm for the traveling salesman problem." Operations research 11.6 (1963): 972-989.
Little, J. D., Murty, K. G., Sweeney, D. W., & Karel, C. (1963). An algorithm for the traveling salesman problem. Operations research, 11(6), 972-989.
Little, John DC, Katta G. Murty, Dura W. Sweeney, and Caroline Karel. "An algorithm for the traveling salesman problem." Operations research 11, no. 6 (1963): 972-989.
Little, J.D., Murty, K.G., Sweeney, D.W. and Karel, C., 1963. An algorithm for the traveling salesman problem. Operations research, 11(6), pp.972-989.
Little JD, Murty KG, Sweeney DW, Karel C. An algorithm for the traveling salesman problem. Operations research. 1963 Dec;11(6):972-89.